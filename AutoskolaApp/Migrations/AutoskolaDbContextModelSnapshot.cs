// <auto-generated />
using System;
using AutoskolaApp.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutoskolaApp.Migrations
{
    [DbContext(typeof(AutoskolaDbContext))]
    partial class AutoskolaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("AutoskolaApp.Models.Administrator", b =>
                {
                    b.Property<Guid>("IDAdministratora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IDKorisnika")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OIB")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IDAdministratora");

                    b.HasIndex("IDKorisnika")
                        .IsUnique();

                    b.ToTable("Administratori");

                    b.HasData(
                        new
                        {
                            IDAdministratora = new Guid("00000000-0000-0000-0000-000000000001"),
                            IDKorisnika = new Guid("00000000-0000-0000-0000-000000000001"),
                            Ime = "Vid",
                            OIB = "17232937055",
                            Prezime = "Piljek"
                        });
                });

            modelBuilder.Entity("AutoskolaApp.Models.Instruktor", b =>
                {
                    b.Property<Guid>("IDInstruktora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DatumZaposlenja")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IDKorisnika")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Napomena")
                        .HasColumnType("TEXT");

                    b.Property<string>("OIB")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IDInstruktora");

                    b.HasIndex("IDKorisnika")
                        .IsUnique();

                    b.ToTable("Instruktori");
                });

            modelBuilder.Entity("AutoskolaApp.Models.Ispit", b =>
                {
                    b.Property<Guid>("IDIspita")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IDInstruktora")
                        .HasColumnType("TEXT");

                    b.Property<string>("VrstaIspita")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IDIspita");

                    b.ToTable("Ispiti");
                });

            modelBuilder.Entity("AutoskolaApp.Models.Korisnik", b =>
                {
                    b.Property<Guid>("IDKorisnika")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("IDUloge")
                        .HasColumnType("INTEGER");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IDKorisnika");

                    b.HasIndex("IDUloge");

                    b.ToTable("Korisnici");

                    b.HasData(
                        new
                        {
                            IDKorisnika = new Guid("00000000-0000-0000-0000-000000000001"),
                            IDUloge = 1,
                            KorisnickoIme = "admin",
                            Lozinka = "adminautoskola"
                        });
                });

            modelBuilder.Entity("AutoskolaApp.Models.PolaznikIspita", b =>
                {
                    b.Property<Guid>("IDPolaznika")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IDIspita")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IDStudenta")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rezultat")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IDPolaznika");

                    b.HasIndex("IDIspita");

                    b.HasIndex("IDStudenta");

                    b.ToTable("PolazniciIspita");
                });

            modelBuilder.Entity("AutoskolaApp.Models.Student", b =>
                {
                    b.Property<Guid>("IDStudenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DatumPocetka")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IDKorisnika")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OIB")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SatiVoznje")
                        .HasColumnType("INTEGER");

                    b.HasKey("IDStudenta");

                    b.HasIndex("IDKorisnika")
                        .IsUnique();

                    b.ToTable("Studenti");
                });

            modelBuilder.Entity("AutoskolaApp.Models.Uloga", b =>
                {
                    b.Property<int>("IDUloge")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImeUloge")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IDUloge");

                    b.ToTable("Uloge");

                    b.HasData(
                        new
                        {
                            IDUloge = 1,
                            ImeUloge = "Administrator"
                        },
                        new
                        {
                            IDUloge = 2,
                            ImeUloge = "Instruktor"
                        },
                        new
                        {
                            IDUloge = 3,
                            ImeUloge = "Student"
                        });
                });

            modelBuilder.Entity("AutoskolaApp.Models.Uplata", b =>
                {
                    b.Property<Guid>("IDUplate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DatumUplate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IDStudenta")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Iznos")
                        .HasColumnType("TEXT");

                    b.Property<string>("NacinUplate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IDUplate");

                    b.HasIndex("IDStudenta");

                    b.ToTable("Uplate");
                });

            modelBuilder.Entity("AutoskolaApp.Models.Vozilo", b =>
                {
                    b.Property<string>("Registracija")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IDInstruktora")
                        .HasColumnType("TEXT");

                    b.Property<string>("Marka")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Registracija");

                    b.HasIndex("IDInstruktora")
                        .IsUnique();

                    b.ToTable("Vozila");
                });

            modelBuilder.Entity("AutoskolaApp.Models.Voznja", b =>
                {
                    b.Property<Guid>("IDVoznje")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DatumVoznje")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IDInstruktora")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IDStudenta")
                        .HasColumnType("TEXT");

                    b.HasKey("IDVoznje");

                    b.ToTable("Voznje");
                });

            modelBuilder.Entity("AutoskolaApp.Models.Administrator", b =>
                {
                    b.HasOne("AutoskolaApp.Models.Korisnik", "Korisnik")
                        .WithOne("Administrator")
                        .HasForeignKey("AutoskolaApp.Models.Administrator", "IDKorisnika")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("AutoskolaApp.Models.Instruktor", b =>
                {
                    b.HasOne("AutoskolaApp.Models.Korisnik", "Korisnik")
                        .WithOne("Instruktor")
                        .HasForeignKey("AutoskolaApp.Models.Instruktor", "IDKorisnika")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("AutoskolaApp.Models.Ispit", b =>
                {
                    b.HasOne("AutoskolaApp.Models.Instruktor", "Instruktor")
                        .WithMany("Ispiti")
                        .HasForeignKey("IDIspita")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instruktor");
                });

            modelBuilder.Entity("AutoskolaApp.Models.Korisnik", b =>
                {
                    b.HasOne("AutoskolaApp.Models.Uloga", "Uloga")
                        .WithMany("Korisnici")
                        .HasForeignKey("IDUloge")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Uloga");
                });

            modelBuilder.Entity("AutoskolaApp.Models.PolaznikIspita", b =>
                {
                    b.HasOne("AutoskolaApp.Models.Ispit", "Ispit")
                        .WithMany("PolazniciIspita")
                        .HasForeignKey("IDIspita")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoskolaApp.Models.Student", "Student")
                        .WithMany("PolazniciIspita")
                        .HasForeignKey("IDStudenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ispit");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AutoskolaApp.Models.Student", b =>
                {
                    b.HasOne("AutoskolaApp.Models.Korisnik", "Korisnik")
                        .WithOne("Student")
                        .HasForeignKey("AutoskolaApp.Models.Student", "IDKorisnika")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("AutoskolaApp.Models.Uplata", b =>
                {
                    b.HasOne("AutoskolaApp.Models.Student", "Student")
                        .WithMany("Uplate")
                        .HasForeignKey("IDStudenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AutoskolaApp.Models.Vozilo", b =>
                {
                    b.HasOne("AutoskolaApp.Models.Instruktor", "Instruktor")
                        .WithOne("Vozilo")
                        .HasForeignKey("AutoskolaApp.Models.Vozilo", "IDInstruktora")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instruktor");
                });

            modelBuilder.Entity("AutoskolaApp.Models.Voznja", b =>
                {
                    b.HasOne("AutoskolaApp.Models.Instruktor", "Instruktor")
                        .WithMany("Voznje")
                        .HasForeignKey("IDVoznje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoskolaApp.Models.Student", "Student")
                        .WithMany("Voznje")
                        .HasForeignKey("IDVoznje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instruktor");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AutoskolaApp.Models.Instruktor", b =>
                {
                    b.Navigation("Ispiti");

                    b.Navigation("Vozilo");

                    b.Navigation("Voznje");
                });

            modelBuilder.Entity("AutoskolaApp.Models.Ispit", b =>
                {
                    b.Navigation("PolazniciIspita");
                });

            modelBuilder.Entity("AutoskolaApp.Models.Korisnik", b =>
                {
                    b.Navigation("Administrator");

                    b.Navigation("Instruktor");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AutoskolaApp.Models.Student", b =>
                {
                    b.Navigation("PolazniciIspita");

                    b.Navigation("Uplate");

                    b.Navigation("Voznje");
                });

            modelBuilder.Entity("AutoskolaApp.Models.Uloga", b =>
                {
                    b.Navigation("Korisnici");
                });
#pragma warning restore 612, 618
        }
    }
}
